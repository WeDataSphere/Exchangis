"use strict";

var _utils = require("@fesjs/utils");

var _serviceWithBuiltIn = require("./serviceWithBuiltIn");

var _getCwd = _interopRequireDefault(require("./utils/getCwd"));

var _getPkg = _interopRequireDefault(require("./utils/getPkg"));

var _package = _interopRequireDefault(require("../package.json"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * @copy 该文件代码大部分出自 umi，有需要请参考：
 * https://github.com/umijs/umi/blob/master/packages/umi/src/forkedDev.ts
 */
const args = (0, _utils.yParser)(process.argv.slice(2));
let closed = false;

function onSignal(signal, service) {
  if (closed) return;
  closed = true; // 退出时触发插件中的onExit事件

  service.applyPlugins({
    key: 'onExit',
    type: service.ApplyPluginsType.event,
    args: {
      signal
    }
  });
  process.exit(0);
}

(async () => {
  try {
    process.env.NODE_ENV = 'development';
    const service = new _serviceWithBuiltIn.Service({
      cwd: (0, _getCwd.default)(),
      pkg: (0, _getPkg.default)(process.cwd()),
      fesPkg: _package.default
    });
    await service.run({
      name: 'dev',
      args
    }); // kill(2) Ctrl-C

    process.once('SIGINT', () => onSignal('SIGINT', service)); // kill(3) Ctrl-\

    process.once('SIGQUIT', () => onSignal('SIGQUIT', service)); // kill(15) default

    process.once('SIGTERM', () => onSignal('SIGTERM', service));
  } catch (e) {
    console.error(_utils.chalk.red(e.message));
    console.error(e.stack);
    process.exit(1);
  }
})();