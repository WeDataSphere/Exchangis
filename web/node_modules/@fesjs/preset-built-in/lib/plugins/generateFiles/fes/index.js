"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;
exports.importsToStr = importsToStr;

var _fs = require("fs");

var _path = require("path");

var _utils = require("@fesjs/utils");

var _constants = require("../../../utils/constants");

function importsToStr(imports) {
  return imports.map(imp => {
    const {
      source,
      specifier
    } = imp;

    if (specifier) {
      return `import ${specifier} from '${(0, _utils.winPath)(source)}';`;
    }

    return `import '${(0, _utils.winPath)(source)}';`;
  });
}

function _default(api) {
  const {
    utils: {
      Mustache
    }
  } = api;
  api.onGenerateFiles(async () => {
    const fesTpl = (0, _fs.readFileSync)((0, _path.join)(__dirname, 'fes.tpl'), 'utf-8');
    api.writeTmpFile({
      path: 'fes.js',
      content: Mustache.render(fesTpl, {
        enableTitle: api.config.title !== false,
        defaultTitle: api.config.title || '',
        runtimePath: _constants.runtimePath,
        rootElement: `#${api.config.mountElementId || 'app'}`,
        entryCode: (await api.applyPlugins({
          key: 'addEntryCode',
          type: api.ApplyPluginsType.add,
          initialValue: []
        })).join('\r\n'),
        entryCodeAhead: (await api.applyPlugins({
          key: 'addEntryCodeAhead',
          type: api.ApplyPluginsType.add,
          initialValue: []
        })).join('\r\n'),
        importsAhead: importsToStr(await api.applyPlugins({
          key: 'addEntryImportsAhead',
          type: api.ApplyPluginsType.add,
          initialValue: []
        })).join('\r\n'),
        imports: importsToStr(await api.applyPlugins({
          key: 'addEntryImports',
          type: api.ApplyPluginsType.add,
          initialValue: []
        })).join('\r\n')
      })
    });
  });
}