"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _fs = require("fs");

var _path = require("path");

var _utils = require("@fesjs/utils");

var _utils2 = require("./utils");

const namespace = 'plugin-locale';

var _default = api => {
  const {
    utils: {
      Mustache
    }
  } = api;
  api.describe({
    key: 'locale',
    config: {
      schema(joi) {
        return joi.object();
      },

      default: {},
      onChange: api.ConfigChangeType.regenerateTmpFiles
    }
  });
  api.addRuntimePluginKey(() => 'locale');
  const absoluteFilePath = (0, _path.join)(namespace, 'core.js');
  const absRuntimeFilePath = (0, _path.join)(namespace, 'runtime.js');

  function getLocaleFileBasePath() {
    return (0, _path.join)(api.paths.absSrcPath, api.config.singular ? 'locale' : 'locales');
  } // 监听 locale 文件改变，重新生成文件


  api.addTmpGenerateWatcherPaths(getLocaleFileBasePath);
  api.onGenerateFiles(() => {
    // .fes配置
    const userConfig = {
      locale: 'zh-CN',
      // default locale
      fallbackLocale: 'zh-CN',
      // set fallback locale
      legacy: true,
      baseNavigator: true,
      // 开启浏览器语言检测
      share: true,
      // 用户是否需要手动改变语言
      ...api.config.locale
    };
    const localeConfigFileBasePath = getLocaleFileBasePath();
    const locales = (0, _utils2.getLocalesJSON)(localeConfigFileBasePath);
    api.writeTmpFile({
      path: absoluteFilePath,
      content: Mustache.render((0, _fs.readFileSync)((0, _path.join)(__dirname, 'runtime/core.tpl'), 'utf-8'), {
        REPLACE_LOCALES: locales,
        REPLACE_DEFAULT_OPTIONS: JSON.stringify({
          locale: userConfig.locale,
          fallbackLocale: userConfig.fallbackLocale,
          legacy: userConfig.legacy
        }, null, 2),
        BASE_NAVIGATOR: userConfig.baseNavigator,
        SHARE: userConfig.share,
        VUE_I18N_PATH: (0, _utils.resolvePkg)('vue-i18n')
      })
    });
    api.copyTmpFiles({
      namespace,
      path: (0, _path.join)(__dirname, 'runtime'),
      ignore: ['.tpl']
    });
  });
  api.addPluginExports(() => [{
    specifiers: ['useI18n', 'locale'],
    source: absoluteFilePath
  }]);
  api.addRuntimePlugin(() => `@@/${absRuntimeFilePath}`);
};

exports.default = _default;