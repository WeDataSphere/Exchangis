"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _utils = require("@fesjs/utils");

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

class BabelRegister {
  constructor() {
    _defineProperty(this, "only", {});
  }

  setOnlyMap({
    key,
    value
  }) {
    this.only[key] = value;
    this.register();
  }

  register() {
    const only = _utils.lodash.uniq(Object.keys(this.only).reduce((memo, key) => memo.concat(this.only[key]), []).map(_utils.winPath));

    require('@babel/register')({
      presets: [[require.resolve('@babel/preset-env'), {
        targets: {
          node: 'current'
        },
        modules: 'commonjs'
      }]],
      ignore: [/node_modules/],
      only,
      extensions: ['.jsx', '.js', '.ts', '.tsx'],
      babelrc: false,
      cache: false
    });
  }

}

exports.default = BabelRegister;