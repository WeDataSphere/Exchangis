module.exports = {
    rules: {
    // Enforce “for” loop update clause moving the counter in the right direction
    // https://eslint.org/docs/rules/for-direction
        // 禁止 for 循环出现方向错误的循环
        // 比如 for(let i = 0; i < 3; i--)
        'for-direction': 'error',

        // Enforces that a return statement is present in property getters
        // https://eslint.org/docs/rules/getter-return
        // getter 必须有返回值
        'getter-return': ['error', { allowImplicit: true }],

        // disallow using an async function as a Promise executor
        // https://eslint.org/docs/rules/no-async-promise-executor
        // 不允许使用 async 作为 promise 的执行器
        'no-async-promise-executor': 'off',

        // Disallow await inside of loops
        // https://eslint.org/docs/rules/no-await-in-loop
        // 禁止将 await 写在循环里，因为这样就无法同时发送异步请求
        // @off es2018 支持异步迭代器
        'no-await-in-loop': 'off',

        // Disallow comparisons to negative zero
        // https://eslint.org/docs/rules/no-compare-neg-zero
        // 禁止与负零进行比较
        'no-compare-neg-zero': 'error',

        // disallow assignment in conditional expressions
        // 禁止在测试表达式中使用赋值语句，除非这个赋值语句被括号包起来
        'no-cond-assign': ['error', 'always'],

        // disallow use of console
        'no-console': 'off',

        // disallow use of constant expressions in conditions
        // 警告将常量作为分支条件判断中的测试表达式
        // 但是允许座位循环条件判断中的测试表达式
        'no-constant-condition': 'off',
        // 'no-constant-condition': [
        //     'error',
        //     {
        //         checkLoops: false
        //     }
        // ],

        // disallow control characters in regular expressions
        // 不允许正则表达式中的控制字符。
        'no-control-regex': 'error',

        // disallow use of debugger
        // 不允许使用 debugger
        'no-debugger': 'error',

        // disallow duplicate arguments in functions
        // 禁止在函数中出现重复名字的参数
        'no-dupe-args': 'error',

        // disallow duplicate keys when creating object literals
        // 禁止在对象字面量中出现重复名称的键名
        'no-dupe-keys': 'error',

        // disallow a duplicate case label.
        // 禁止在 switch 语句中出现重复测试表达式的 case
        'no-duplicate-case': 'error',

        // disallow empty statements
        // 禁止出现空代码块，允许 catch 为空代码块
        'no-empty': [
            'error',
            {
                allowEmptyCatch: true
            }
        ],

        // disallow the use of empty character classes in regular expressions
        // 禁止在正则表达式中使用空的字符集 []
        'no-empty-character-class': 'error',

        // disallow assigning to the exception in a catch block
        // 禁止将 catch 的第一个参数 error 重新赋值
        'no-ex-assign': 'error',

        // disallow double-negation boolean casts in a boolean context
        // https://eslint.org/docs/rules/no-extra-boolean-cast
        // @fixable 禁止不必要的布尔类型转换，比如 !! 或 Boolean
        'no-extra-boolean-cast': 'error',

        // disallow unnecessary parentheses
        // https://eslint.org/docs/rules/no-extra-parens
        // @fixable 禁止函数表达式中出现多余的括号
        // 比如 const fn = (function() { return 1;})
        'no-extra-parens': ['off', 'all', {
            conditionalAssign: true,
            nestedBinaryExpressions: false,
            returnAssign: false,
            ignoreJSX: 'all', // delegate to eslint-plugin-react
            enforceForArrowConditionals: false
        }],

        // disallow unnecessary semicolons
        // @fixable 禁止出现多余的分号
        'no-extra-semi': 'error',

        // disallow overwriting functions written as function declarations
        // 禁止将一个函数声明重新赋值
        'no-func-assign': 'error',

        // disallow function or variable declarations in nested blocks
        // 禁止在 if 代码块内出现函数声明
        'no-inner-declarations': 'error',

        // disallow invalid regular expression strings in the RegExp constructor
        // 禁止在 RegExp 构造函数中出现非法的正则表达式
        'no-invalid-regexp': 'error',

        // disallow irregular whitespace outside of strings and comments
        // 禁止使用特殊空白符号（比如全角空格）
        'no-irregular-whitespace': 'error',

        // Disallow characters which are made with multiple code points in character class syntax
        // https://eslint.org/docs/rules/no-misleading-character-class
        // TODO: enable, semver-major
        'no-misleading-character-class': 'off',

        // disallow the use of object properties of the global object (Math and JSON) as functions
        // 禁止将 Math, JSON 或者 Reflect 直接作为函数使用
        'no-obj-calls': 'error',

        // disallow use of Object.prototypes builtins directly
        // https://eslint.org/docs/rules/no-prototype-builtins
        // 禁止直接从普通对象调用hasOwnProperty, isPrototypeOf 或 propertyIsEnumrable
        'no-prototype-builtins': 'error',

        // disallow multiple spaces in a regular expression literal
        // @fixable 禁止在正则表达式中出现连续的空格，必须使用 /foo {3}bar/ 代替
        'no-regex-spaces': 'error',

        // disallow sparse arrays
        // 禁止在数组中出现连续的逗号
        'no-sparse-arrays': 'error',

        // Disallow template literal placeholder syntax in regular strings
        // https://eslint.org/docs/rules/no-template-curly-in-string
        // 禁止在普通字符串中出现模版字符串的变量形式，如 'hello ${name}'
        'no-template-curly-in-string': 'error',

        // Avoid code that looks like two expressions but is actually one
        // https://eslint.org/docs/rules/no-unexpected-multiline
        // 禁止出现难以理解多行表达式
        'no-unexpected-multiline': 'error',

        // disallow unreachable statements after a return, throw, continue, or break statement
        // 禁止在 return, throw, break 或 contiue 之后还有代码
        'no-unreachable': 'error',

        // disallow return/throw/break/continue inside finally blocks
        // https://eslint.org/docs/rules/no-unsafe-finally
        // 禁止在 finally 中出现 return, throw, break 或 continue
        'no-unsafe-finally': 'error',

        // disallow negating the left operand of relational operators
        // https://eslint.org/docs/rules/no-unsafe-negation
        // @fixable 禁止在 in 或 instanceof 操作符的左侧使用感叹号
        'no-unsafe-negation': 'error',

        // Disallow assignments that can lead to race conditions due to usage of await or yield
        // https://eslint.org/docs/rules/require-atomic-updates
        // TODO: enable, semver-major
        // 原子更新
        'require-atomic-updates': 'off',

        // disallow comparisons with the value NaN
        // 必须使用 isNaN(foo) 而不是 foo === NaN
        'use-isnan': 'error',

        // ensure JSDoc comments are valid
        // https://eslint.org/docs/rules/valid-jsdoc
        // 注释必须符合 jsdoc 的规范
        // @off jsdoc 要求太严格
        'valid-jsdoc': 'off',

        // ensure that the results of typeof are compared against a valid string
        // https://eslint.org/docs/rules/valid-typeof
        // typeof 表达式比较对象必须是
        // 'undefined', 'object', 'boolean', 'number', 'string', 'function'
        // 或 'symbol'
        'valid-typeof': ['error', { requireStringLiterals: true }]
    }
};
