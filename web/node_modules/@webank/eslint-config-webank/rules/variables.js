const confusingBrowserGlobals = require('confusing-browser-globals');

module.exports = {
    rules: {
    // enforce or disallow variable initializations at definition
        // 变量必须在定义的时候赋值
        'init-declarations': 'off',

        // disallow the catch clause parameter name being the same as a variable in the outer scope
        // 禁止 catch 的参数名与定义过的变量重复
        'no-catch-shadow': 'off',

        // disallow deletion of variables
        'no-delete-var': 'error',

        // disallow labels that share a name with a variable
        // https://eslint.org/docs/rules/no-label-var
        // 禁止 label 名称与定义过的变量重复
        'no-label-var': 'error',

        // disallow specific globals
        // 禁止使用指定的全局变量
        // @off 它用于限制某个具体的变量名不能使用
        'no-restricted-globals': ['error', 'isFinite', 'isNaN'].concat(confusingBrowserGlobals),

        // disallow declaration of variables already declared in the outer scope
        // 禁止变量名与上层作用域内的定义过的变量重复
        'no-shadow': 'error',

        // disallow shadowing of names such as arguments
        // 禁止使用保留字作为变量名
        'no-shadow-restricted-names': 'error',

        // disallow use of undeclared variables unless mentioned in a /*global */ block
        // 禁止使用未定义的变量
        'no-undef': 'error',

        // disallow use of undefined when initializing variables
        // @fixable 禁止将 undefined 赋值给变量
        'no-undef-init': 'error',

        // disallow use of undefined variable
        // https://eslint.org/docs/rules/no-undefined
        // TODO: enable?
        // 禁止对 undefined 重新赋值
        'no-undefined': 'error',

        // disallow declaration of variables that are not used in the code
        // 定义过的变量必须使用
        'no-unused-vars': ['error', { vars: 'all', args: 'after-used', ignoreRestSiblings: true }],

        // disallow use of variables before they are defined
        // 变量必须先定义后使用
        'no-use-before-define': ['error', { functions: true, classes: true, variables: true }]
    }
};
